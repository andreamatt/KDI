<?xml version="1.0" encoding="UTF-8"?><process version="9.5.001">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.5.001" expanded="true" name="Process">
    <parameter key="logverbosity" value="all"/>
    <parameter key="logfile" value="C:\Users\a_has\Documents\test.log"/>
    <parameter key="resultfile" value="C:\Users\a_has\Documents\res.res"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="UTF-8"/>
    <process expanded="true">
      <operator activated="true" class="python_scripting:execute_python" compatibility="9.3.001" expanded="true" height="82" name="cinemaRovereto PRE" width="90" x="45" y="34">
        <parameter key="script" value="import pandas as pd&#10;import json&#10;class eventObj:&#10;&#9;def __init__(self, title=&quot;&quot;, category=&quot;&quot;, subCategory=&quot;&quot;, date=&quot;&quot;, time=&quot;&quot;, locationName=&quot;&quot;, locationURL=&quot;&quot;,&#10;&#9;&#9;&#9;&#9; suitableFor=&quot;&quot;, source=&quot;&quot;, description=&quot;&quot;, other=&quot;&quot;, contact=&quot;&quot;, cost=&quot;&quot;, link=&quot;&quot;, subSubCategory=&quot;&quot;):&#10;&#9;&#9;self.source = source&#10;&#9;&#9;self.category = category&#10;&#9;&#9;self.subCategory = subCategory&#10;&#9;&#9;self.subSubCategory = subSubCategory&#10;&#9;&#9;self.suitableFor = suitableFor&#10;&#9;&#9;self.title = title&#10;&#9;&#9;self.date = date&#10;&#9;&#9;self.time = time&#10;&#9;&#9;self.locationName = locationName&#10;&#9;&#9;self.locationURL = locationURL&#10;&#9;&#9;self.description = description&#10;&#9;&#9;self.contact = contact&#10;&#9;&#9;self.cost = cost&#10;&#9;&#9;self.other = other&#10;&#9;&#9;self.link = link&#10;&#10;def rm_main(data):&#10;&#9;culturaEvents = []&#10;&#9;cultura = json.load(data)&#10;&#9;for day in cultura['result']['events']:&#10;&#9;&#9;for eventType in day['tipo_evento']:&#10;&#9;&#9;&#9;for event in eventType['events']:&#10;&#9;&#9;&#9;&#9;subSubCategory = &quot;&quot;&#10;&#9;&#9;&#9;&#9;for subType in event['tipo_evento']:&#10;&#9;&#9;&#9;&#9;&#9;if subType['name'] is not None:&#10;&#9;&#9;&#9;&#9;&#9;&#9;subSubCategory += subType['name'] + &quot;,&quot;&#10;&#9;&#9;&#9;&#9;if len(event['luogo_della_cultura']) == 0:&#10;&#9;&#9;&#9;&#9;&#9;event['luogo_della_cultura'].append({&#10;&#9;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;: &quot;&quot;&#10;&#9;&#9;&#9;&#9;&#9;})&#10;&#9;&#9;&#9;&#9;culturaEvents.append(eventObj(&#10;&#9;&#9;&#9;&#9;&#9;&#9;source=&quot;cultura&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;category=&quot;Cultural&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;subCategory=eventType['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;subSubCategory=subSubCategory,&#10;&#9;&#9;&#9;&#9;&#9;&#9;title=event['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;link=event['href'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;date=day['day']['identifier'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;time=event['orario_svolgimento'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;locationName=event['comune'][0]['name'] + &quot; --SELF-- &quot; + event['luogo_svolgimento'] + &quot; --SELF-- &quot; +&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; event['luogo_della_cultura'][0]['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;cost=event['costi'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;contact=event['telefono'] + &quot; --SELF-- &quot; + event['email']&#10;&#9;&#9;&#9;&#9;))&#10;&#9;culturaEvents = [ob.__dict__ for ob in culturaEvents]&#10;&#9;js = json.dumps(culturaEvents)&#10;&#9;print(js)&#10;&#9;df = pd.DataFrame(culturaEvents)&#10;&#9;&#10;&#9;return df"/>
        <parameter key="script_file" value="C:\Users\andre\Desktop\kdi\scraping\KDI\scripts\extract\cinemaRovereto_PRE.py"/>
        <parameter key="notebook_cell_tag_filter" value=""/>
        <parameter key="use_default_python" value="true"/>
        <parameter key="package_manager" value="conda (anaconda)"/>
      </operator>
      <operator activated="true" class="python_scripting:execute_python" compatibility="9.3.001" expanded="true" height="103" name="cinemaRovereto format" width="90" x="179" y="34">
        <parameter key="script" value="import pandas as pd&#10;import json&#10;class eventObj:&#10;&#9;def __init__(self, title=&quot;&quot;, category=&quot;&quot;, subCategory=&quot;&quot;, date=&quot;&quot;, time=&quot;&quot;, locationName=&quot;&quot;, locationURL=&quot;&quot;,&#10;&#9;&#9;&#9;&#9; suitableFor=&quot;&quot;, source=&quot;&quot;, description=&quot;&quot;, other=&quot;&quot;, contact=&quot;&quot;, cost=&quot;&quot;, link=&quot;&quot;, subSubCategory=&quot;&quot;):&#10;&#9;&#9;self.source = source&#10;&#9;&#9;self.category = category&#10;&#9;&#9;self.subCategory = subCategory&#10;&#9;&#9;self.subSubCategory = subSubCategory&#10;&#9;&#9;self.suitableFor = suitableFor&#10;&#9;&#9;self.title = title&#10;&#9;&#9;self.date = date&#10;&#9;&#9;self.time = time&#10;&#9;&#9;self.locationName = locationName&#10;&#9;&#9;self.locationURL = locationURL&#10;&#9;&#9;self.description = description&#10;&#9;&#9;self.contact = contact&#10;&#9;&#9;self.cost = cost&#10;&#9;&#9;self.other = other&#10;&#9;&#9;self.link = link&#10;&#10;def rm_main(data):&#10;&#9;culturaEvents = []&#10;&#9;cultura = json.load(data)&#10;&#9;for day in cultura['result']['events']:&#10;&#9;&#9;for eventType in day['tipo_evento']:&#10;&#9;&#9;&#9;for event in eventType['events']:&#10;&#9;&#9;&#9;&#9;subSubCategory = &quot;&quot;&#10;&#9;&#9;&#9;&#9;for subType in event['tipo_evento']:&#10;&#9;&#9;&#9;&#9;&#9;if subType['name'] is not None:&#10;&#9;&#9;&#9;&#9;&#9;&#9;subSubCategory += subType['name'] + &quot;,&quot;&#10;&#9;&#9;&#9;&#9;if len(event['luogo_della_cultura']) == 0:&#10;&#9;&#9;&#9;&#9;&#9;event['luogo_della_cultura'].append({&#10;&#9;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;: &quot;&quot;&#10;&#9;&#9;&#9;&#9;&#9;})&#10;&#9;&#9;&#9;&#9;culturaEvents.append(eventObj(&#10;&#9;&#9;&#9;&#9;&#9;&#9;source=&quot;cultura&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;category=&quot;Cultural&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;subCategory=eventType['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;subSubCategory=subSubCategory,&#10;&#9;&#9;&#9;&#9;&#9;&#9;title=event['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;link=event['href'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;date=day['day']['identifier'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;time=event['orario_svolgimento'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;locationName=event['comune'][0]['name'] + &quot; --SELF-- &quot; + event['luogo_svolgimento'] + &quot; --SELF-- &quot; +&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; event['luogo_della_cultura'][0]['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;cost=event['costi'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;contact=event['telefono'] + &quot; --SELF-- &quot; + event['email']&#10;&#9;&#9;&#9;&#9;))&#10;&#9;culturaEvents = [ob.__dict__ for ob in culturaEvents]&#10;&#9;js = json.dumps(culturaEvents)&#10;&#9;print(js)&#10;&#9;df = pd.DataFrame(culturaEvents)&#10;&#9;&#10;&#9;return df"/>
        <parameter key="script_file" value="C:\Users\andre\Desktop\kdi\scraping\KDI\scripts\format\cinemaRovereto_format.py"/>
        <parameter key="notebook_cell_tag_filter" value=""/>
        <parameter key="use_default_python" value="true"/>
        <parameter key="package_manager" value="conda (anaconda)"/>
      </operator>
      <operator activated="true" class="python_scripting:execute_python" compatibility="9.3.001" expanded="true" height="103" name="cinemaRovereto" width="90" x="313" y="34">
        <parameter key="script" value="import pandas as pd&#10;import json&#10;class eventObj:&#10;&#9;def __init__(self, title=&quot;&quot;, category=&quot;&quot;, subCategory=&quot;&quot;, date=&quot;&quot;, time=&quot;&quot;, locationName=&quot;&quot;, locationURL=&quot;&quot;,&#10;&#9;&#9;&#9;&#9; suitableFor=&quot;&quot;, source=&quot;&quot;, description=&quot;&quot;, other=&quot;&quot;, contact=&quot;&quot;, cost=&quot;&quot;, link=&quot;&quot;, subSubCategory=&quot;&quot;):&#10;&#9;&#9;self.source = source&#10;&#9;&#9;self.category = category&#10;&#9;&#9;self.subCategory = subCategory&#10;&#9;&#9;self.subSubCategory = subSubCategory&#10;&#9;&#9;self.suitableFor = suitableFor&#10;&#9;&#9;self.title = title&#10;&#9;&#9;self.date = date&#10;&#9;&#9;self.time = time&#10;&#9;&#9;self.locationName = locationName&#10;&#9;&#9;self.locationURL = locationURL&#10;&#9;&#9;self.description = description&#10;&#9;&#9;self.contact = contact&#10;&#9;&#9;self.cost = cost&#10;&#9;&#9;self.other = other&#10;&#9;&#9;self.link = link&#10;&#10;def rm_main(data):&#10;&#9;culturaEvents = []&#10;&#9;cultura = json.load(data)&#10;&#9;for day in cultura['result']['events']:&#10;&#9;&#9;for eventType in day['tipo_evento']:&#10;&#9;&#9;&#9;for event in eventType['events']:&#10;&#9;&#9;&#9;&#9;subSubCategory = &quot;&quot;&#10;&#9;&#9;&#9;&#9;for subType in event['tipo_evento']:&#10;&#9;&#9;&#9;&#9;&#9;if subType['name'] is not None:&#10;&#9;&#9;&#9;&#9;&#9;&#9;subSubCategory += subType['name'] + &quot;,&quot;&#10;&#9;&#9;&#9;&#9;if len(event['luogo_della_cultura']) == 0:&#10;&#9;&#9;&#9;&#9;&#9;event['luogo_della_cultura'].append({&#10;&#9;&#9;&#9;&#9;&#9;&#9;&quot;name&quot;: &quot;&quot;&#10;&#9;&#9;&#9;&#9;&#9;})&#10;&#9;&#9;&#9;&#9;culturaEvents.append(eventObj(&#10;&#9;&#9;&#9;&#9;&#9;&#9;source=&quot;cultura&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;category=&quot;Cultural&quot;,&#10;&#9;&#9;&#9;&#9;&#9;&#9;subCategory=eventType['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;subSubCategory=subSubCategory,&#10;&#9;&#9;&#9;&#9;&#9;&#9;title=event['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;link=event['href'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;date=day['day']['identifier'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;time=event['orario_svolgimento'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;locationName=event['comune'][0]['name'] + &quot; --SELF-- &quot; + event['luogo_svolgimento'] + &quot; --SELF-- &quot; +&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; event['luogo_della_cultura'][0]['name'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;cost=event['costi'],&#10;&#9;&#9;&#9;&#9;&#9;&#9;contact=event['telefono'] + &quot; --SELF-- &quot; + event['email']&#10;&#9;&#9;&#9;&#9;))&#10;&#9;culturaEvents = [ob.__dict__ for ob in culturaEvents]&#10;&#9;js = json.dumps(culturaEvents)&#10;&#9;print(js)&#10;&#9;df = pd.DataFrame(culturaEvents)&#10;&#9;&#10;&#9;return df"/>
        <parameter key="script_file" value="C:\Users\andre\Desktop\kdi\scraping\KDI\scripts\structure\cinemaRovereto.py"/>
        <parameter key="notebook_cell_tag_filter" value=""/>
        <parameter key="use_default_python" value="true"/>
        <parameter key="package_manager" value="conda (anaconda)"/>
      </operator>
      <operator activated="true" class="append" compatibility="9.5.001" expanded="true" height="103" name="Append" width="90" x="514" y="34">
        <parameter key="datamanagement" value="double_array"/>
        <parameter key="data_management" value="auto"/>
        <parameter key="merge_type" value="all"/>
      </operator>
      <connect from_op="cinemaRovereto PRE" from_port="output 1" to_op="cinemaRovereto format" to_port="input 1"/>
      <connect from_op="cinemaRovereto format" from_port="output 1" to_op="cinemaRovereto" to_port="input 1"/>
      <connect from_op="cinemaRovereto" from_port="output 1" to_op="Append" to_port="example set 1"/>
      <connect from_op="Append" from_port="merged set" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
    </process>
  </operator>
</process>
